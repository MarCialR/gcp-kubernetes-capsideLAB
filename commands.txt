# To login to the kubernetes cluster to start working with it
gcloud container clusters get-credentials kubernetesdemo

# Check that the basic services are installed in the gcloud kubernetes cluster
kubectl --namespace=kube-system get services

# Namespaces creation
# dev
kubectl create -f namespace-dev.yaml
# prod
kubectl create -f namespace-prod.yaml

# Discover cluster and user name
cat ~/.kube/config

# Contexts for the namespaces
kubectl config set-context dev --namespace=development --cluster=clusterName --user=userName
kubectl config set-context prod --namespace=development --cluster=clusterName --user=userName

# Use the dev context
kubectl config use-context dev

# Deploy!
./deployAll.sh
# or use individual commands
#Mysql
kubectl create -f mysql/kubernetes/mysql_rc
kubectl create -f mysql/kubernetes/mysql_service
#Backend
kubectl create -f backend/kubernetes/backend-api_rc
kubectl create -f backend/kubernetes/backend-api_service
#Frontend
kubectl create -f frontend/kubernetes/frontend_rc
kubectl create -f frontend/kubernetes/frontend_service

# General commands to inspect the deployment
kubectl get rc # List deployed replicatoin controllers
kubectl get services # List deployed services
kubectl get pods # list deployed pods

# Let's deploy Kubedash
git clone https://github.com/kubernetes/kubedash.git
cd kubedash
kubectl create -f deploy/bundle.yaml

# Now let's duplicate the infrastructure in production
kubectl config use-context prod
./deployAll.sh
